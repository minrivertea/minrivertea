This is a simple custom Django ecommerce store currently in production at www.minrivertea.com

HELP ME IMPROVE MY TEA STORE AND I'LL SEND YOU FREE CHINESE TEA. SERIOUSLY :)

BACKGROUND:
I own an online Chinese tea shop, recently launched and built myself with my very junior Django/Python dev skills. There's lots I'd like to do, but I don't have the skillz to do it. If you're a Python/Django developer and can contribute to making improvements to my online shop code, I'll thank you with some free great tasting Chinese green tea.

 * More info on http://www.minrivertea.com/contribute/
 * For my 'wishlist' of things, checkout the 'Issues' section on this repo page (https://github.com/minrivertea/public/issues)
 * Contact me at chris@minrivertea.com for any other information.

RULES:
You can contribute 1 line of code, 10 lines or 100 lines - it's up to your generosity/abilities. The only other rules are simple:

 1. You must submit 'real' code, something that works, not pseudo code or an equivalent in PHP for example.
 2. If you can't submit working code, then try to explain what I should do as simply as possible.
 3. Please try to comment any code you submit as best you can.
 4. It's not a competition - if someone else submits similar/better code, you still get tea :)
 5. Once an improvement is live, I'll remove it from the wishlist.
 6. Send me your postal address via git messaging and whether you prefer green or red tea, and I'll send you the tea. 
 
 * (ps. no spam - I won't store your address or send anything other than your free tea.)
 * (pps. this isn't a generic open source shop project - it's my tea website! If you want to use this as a base for your shop or turn it into a more generic Django shop project, feel free to fork it, but don't send me updates that aren't relevant to my wishlist or my shop. Thanks!)
 
 
REQUIREMENTS:
 * Django 1.2.4
 * Python 2.6.1
 * MySQL (or whatever your preferred database)
 * sorl-thumbnail (https://github.com/sorl/sorl-thumbnail)
 * django-paypal (https://github.com/johnboxall/django-paypal)
 * django-registration (https://bitbucket.org/ubernostrum/django-registration)
 * django-static (https://github.com/peterbe/django-static) 


INSTALLATION:
 1. Take a fork of this project to your local machine
 2. Install requirements (as above)
 3. Apply the hack I made below (or if you can fix my hacks....all the better!)
 4. Create a local_settings.py file with your database engine/other details etc in it (don't commit this, please!)
 5. [Optional] Create sandbox paypal account and update settings.py (if you want to test the payments all the way through)
    https://www.sandbox.paypal.com/cgi-bin/webscr


 
HACKS:
I had to make an ugly hack - bad practice I know, but again, I'm a noob and don't know any better...

 * django-registration
 	- in registration/views.py #195
 	- As a user fills in the address form for an order, I 'secretly' log them in and create a user object. I added in 1 line of code to additionally create a Shopper object and make a relationship between new User and new Shopper.